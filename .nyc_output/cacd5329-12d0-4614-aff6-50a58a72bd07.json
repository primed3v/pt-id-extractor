{"/Users/pauloviana/Documents/GitHub/pt-id-extractor/src/extractor.ts":{"path":"/Users/pauloviana/Documents/GitHub/pt-id-extractor/src/extractor.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":59}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":32}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":38}},"5":{"start":{"line":11,"column":20},"end":{"line":11,"column":72}},"6":{"start":{"line":12,"column":24},"end":{"line":12,"column":43}},"7":{"start":{"line":13,"column":8},"end":{"line":13,"column":23}},"8":{"start":{"line":17,"column":20},"end":{"line":17,"column":71}},"9":{"start":{"line":18,"column":23},"end":{"line":18,"column":144}},"10":{"start":{"line":18,"column":103},"end":{"line":18,"column":141}},"11":{"start":{"line":19,"column":8},"end":{"line":25,"column":9}},"12":{"start":{"line":20,"column":42},"end":{"line":20,"column":77}},"13":{"start":{"line":21,"column":12},"end":{"line":21,"column":41}},"14":{"start":{"line":24,"column":12},"end":{"line":24,"column":26}},"15":{"start":{"line":28,"column":20},"end":{"line":28,"column":71}},"16":{"start":{"line":29,"column":23},"end":{"line":29,"column":42}},"17":{"start":{"line":30,"column":8},"end":{"line":30,"column":22}},"18":{"start":{"line":33,"column":20},"end":{"line":33,"column":73}},"19":{"start":{"line":34,"column":25},"end":{"line":34,"column":44}},"20":{"start":{"line":35,"column":8},"end":{"line":35,"column":24}},"21":{"start":{"line":38,"column":20},"end":{"line":38,"column":74}},"22":{"start":{"line":39,"column":25},"end":{"line":39,"column":44}},"23":{"start":{"line":40,"column":8},"end":{"line":40,"column":24}},"24":{"start":{"line":43,"column":0},"end":{"line":43,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":18},"end":{"line":9,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":26},"end":{"line":14,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":25},"end":{"line":26,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":94},"end":{"line":18,"column":95}},"loc":{"start":{"line":18,"column":101},"end":{"line":18,"column":143}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":25},"end":{"line":31,"column":5}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":27},"end":{"line":36,"column":5}},"line":32},"6":{"name":"(anonymous_6)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":27},"end":{"line":41,"column":5}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":23},"end":{"line":18,"column":144}},"type":"cond-expr","locations":[{"start":{"line":18,"column":78},"end":{"line":18,"column":84}},{"start":{"line":18,"column":87},"end":{"line":18,"column":144}}],"line":18},"1":{"loc":{"start":{"line":18,"column":23},"end":{"line":18,"column":75}},"type":"binary-expr","locations":[{"start":{"line":18,"column":23},"end":{"line":18,"column":58}},{"start":{"line":18,"column":62},"end":{"line":18,"column":75}}],"line":18},"2":{"loc":{"start":{"line":19,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":25,"column":9}},{"start":{"line":19,"column":8},"end":{"line":25,"column":9}}],"line":19}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":2,"10":1,"11":2,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1},"f":{"0":1,"1":1,"2":2,"3":1,"4":1,"5":1,"6":1},"b":{"0":[1,1],"1":[2,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/pauloviana/Documents/GitHub/pt-id-extractor/src/extractor.ts","sources":["/Users/pauloviana/Documents/GitHub/pt-id-extractor/src/extractor.ts"],"names":[],"mappings":";;;AAAA,4DAAyD;AACzD,iCAA8B;AAE9B,MAAa,SAAS;IAAtB;QACU,SAAI,GAAG,IAAI,WAAI,EAAE,CAAC;IAsC5B,CAAC;IApCC,WAAW,CAAC,QAAgB;QAC1B,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,yBAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QACnD,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,UAAU,CAAC,QAAgB;;QACzB,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,yBAAW,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAClD,MAAM,MAAM,GAAG,MAAA,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,0CAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA,CAAA,CAAC,CAAC,CAAC;QACzF,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAClE,OAAO,qBAAqB,CAAC;SAC9B;aAED;YACI,OAAO,MAAM,CAAC;SACjB;IACH,CAAC;IAED,UAAU,CAAC,QAAgB;QACzB,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,yBAAW,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAClD,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,YAAY,CAAC,QAAgB;QAC3B,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,yBAAW,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QACpD,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrC,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,YAAY,CAAC,QAAgB;QAC3B,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,yBAAW,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QACrD,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrC,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AAvCD,8BAuCC","sourcesContent":["import { environment } from \"./environments/environment\";\nimport { Util } from \"./util\";\n\nexport class Extractor {\n  private util = new Util();\n\n  extractNIFs(fullText: string): string[] | null {\n    const reg = new RegExp(environment.regex_nif, \"g\");\n    const arrNifs = fullText.match(reg);\n    return arrNifs;\n  }\n\n  extractCCs(fullText: string): string[] | null {\n    const reg = new RegExp(environment.regex_cc, \"g\");\n    const arrCCs = fullText.match(reg)?.map(val => { return val.replaceAll(\" \", \"\").trim()});\n    if (!arrCCs) {\n      const arrCCsMistakesChecked = this.util.checkCCMistakes(fullText);\n      return arrCCsMistakesChecked;\n    }\n    else\n    {\n        return arrCCs;\n    }\n  }\n\n  extractBIs(fullText: string): string[] | null {\n    const reg = new RegExp(environment.regex_bi, \"g\");\n    const arrBIs = fullText.match(reg);\n    return arrBIs;\n  }\n\n  extractNISSs(fullText: string): string[] | null {\n    const reg = new RegExp(environment.regex_niss, \"g\");\n    const arrNISSs = fullText.match(reg);\n    return arrNISSs;\n  }\n\n  extractDates(fullText: string): string[] | null {\n    const reg = new RegExp(environment.regex_dates, \"g\");\n    const arrDates = fullText.match(reg);\n    return arrDates;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7484b05f17e86cd882bf521b0ef9e99ec6e139b3"},"/Users/pauloviana/Documents/GitHub/pt-id-extractor/src/util.ts":{"path":"/Users/pauloviana/Documents/GitHub/pt-id-extractor/src/util.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":59}},"3":{"start":{"line":8,"column":31},"end":{"line":8,"column":103}},"4":{"start":{"line":9,"column":28},"end":{"line":9,"column":30}},"5":{"start":{"line":11,"column":8},"end":{"line":20,"column":11}},"6":{"start":{"line":12,"column":28},"end":{"line":12,"column":60}},"7":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"8":{"start":{"line":14,"column":16},"end":{"line":14,"column":56}},"9":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"10":{"start":{"line":17,"column":16},"end":{"line":17,"column":56}},"11":{"start":{"line":19,"column":12},"end":{"line":19,"column":42}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":48}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":29}},"14":{"start":{"line":26,"column":0},"end":{"line":26,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":30},"end":{"line":24,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":94},"end":{"line":11,"column":95}},"loc":{"start":{"line":11,"column":105},"end":{"line":20,"column":9}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":20,"column":10}},"type":"cond-expr","locations":[{"start":{"line":11,"column":74},"end":{"line":11,"column":80}},{"start":{"line":11,"column":83},"end":{"line":20,"column":10}}],"line":11},"1":{"loc":{"start":{"line":11,"column":8},"end":{"line":11,"column":71}},"type":"binary-expr","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":54}},{"start":{"line":11,"column":58},"end":{"line":11,"column":71}}],"line":11},"2":{"loc":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"type":"if","locations":[{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},{"start":{"line":13,"column":12},"end":{"line":15,"column":13}}],"line":13},"3":{"loc":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},{"start":{"line":16,"column":12},"end":{"line":18,"column":13}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":1,"13":1,"14":1},"f":{"0":1,"1":1},"b":{"0":[0,1],"1":[1,1],"2":[1,0],"3":[0,1]},"inputSourceMap":{"version":3,"file":"/Users/pauloviana/Documents/GitHub/pt-id-extractor/src/util.ts","sources":["/Users/pauloviana/Documents/GitHub/pt-id-extractor/src/util.ts"],"names":[],"mappings":";;;AAAA,4DAAyD;AAEzD,MAAa,IAAI;IACR,eAAe,CAAC,QAAgB;;QACrC,MAAM,cAAc,GAAG,IAAI,MAAM,CAC/B,yBAAW,CAAC,6BAA6B,EACzC,GAAG,CACJ,CAAC;QAEF,IAAI,aAAa,GAAa,EAAE,CAAC;QAEjC,oFAAoF;QACpF,MAAA,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,0CAAE,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAChD,IAAI,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;YAEjD,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;gBACvB,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;aACzC;YACD,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;gBACvB,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;aACzC;YACD,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,+BAA+B;QAC/B,aAAa,GAAG,aAAa,CAAC,OAAO,EAAE,CAAC;QACxC,OAAO,aAAa,CAAC;IACvB,CAAC;CACF;AA1BD,oBA0BC","sourcesContent":["import { environment } from \"./environments/environment\";\n\nexport class Util {\n  public checkCCMistakes(fullText: string): RegExpMatchArray | null {\n    const regZeroMistake = new RegExp(\n      environment.regex_cc_letterorzero_mistake,\n      \"g\"\n    );\n\n    let arrCCsMistake: string[] = [];\n\n    // Zero constantly confused with \"o\" letter in the middle of CC  ( 8 caracter index)\n    fullText.match(regZeroMistake)?.forEach((value) => {\n      let simpleRes = value.replaceAll(\" \", \"\").trim();\n\n      if (simpleRes[8] == \"o\") {\n        simpleRes = simpleRes.replace(\"o\", \"0\");\n      }\n      if (simpleRes[8] == \"O\") {\n        simpleRes = simpleRes.replace(\"O\", \"0\");\n      }\n      arrCCsMistake.push(simpleRes);\n    });\n\n    // back array to original order\n    arrCCsMistake = arrCCsMistake.reverse();\n    return arrCCsMistake;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"93b902c5dce7bcc340b9a5c6dd944070ebc174fe"},"/Users/pauloviana/Documents/GitHub/pt-id-extractor/src/validators.ts":{"path":"/Users/pauloviana/Documents/GitHub/pt-id-extractor/src/validators.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":59}},"4":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"5":{"start":{"line":9,"column":12},"end":{"line":9,"column":46}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":21}},"7":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"8":{"start":{"line":15,"column":12},"end":{"line":15,"column":54}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":21}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":40}},"11":{"start":{"line":23,"column":8},"end":{"line":44,"column":9}},"12":{"start":{"line":24,"column":12},"end":{"line":24,"column":25}},"13":{"start":{"line":27,"column":28},"end":{"line":27,"column":64}},"14":{"start":{"line":28,"column":30},"end":{"line":28,"column":32}},"15":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"16":{"start":{"line":29,"column":25},"end":{"line":29,"column":26}},"17":{"start":{"line":30,"column":16},"end":{"line":30,"column":47}},"18":{"start":{"line":32,"column":22},"end":{"line":32,"column":23}},"19":{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},"20":{"start":{"line":34,"column":25},"end":{"line":34,"column":26}},"21":{"start":{"line":35,"column":16},"end":{"line":35,"column":59}},"22":{"start":{"line":38,"column":12},"end":{"line":43,"column":13}},"23":{"start":{"line":39,"column":16},"end":{"line":39,"column":28}},"24":{"start":{"line":42,"column":16},"end":{"line":42,"column":29}},"25":{"start":{"line":47,"column":0},"end":{"line":47,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":22},"end":{"line":12,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":30},"end":{"line":18,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":20},"end":{"line":21,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":24},"end":{"line":45,"column":5}},"line":22}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"type":"if","locations":[{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},{"start":{"line":8,"column":8},"end":{"line":10,"column":9}}],"line":8},"1":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14},"2":{"loc":{"start":{"line":23,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":44,"column":9}},{"start":{"line":23,"column":8},"end":{"line":44,"column":9}}],"line":23},"3":{"loc":{"start":{"line":38,"column":12},"end":{"line":43,"column":13}},"type":"if","locations":[{"start":{"line":38,"column":12},"end":{"line":43,"column":13}},{"start":{"line":38,"column":12},"end":{"line":43,"column":13}}],"line":38}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":2,"6":0,"7":2,"8":1,"9":1,"10":2,"11":2,"12":0,"13":2,"14":2,"15":2,"16":2,"17":22,"18":2,"19":2,"20":2,"21":20,"22":2,"23":1,"24":1,"25":1},"f":{"0":2,"1":2,"2":2,"3":2},"b":{"0":[2,0],"1":[1,1],"2":[0,2],"3":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/pauloviana/Documents/GitHub/pt-id-extractor/src/validators.ts","sources":["/Users/pauloviana/Documents/GitHub/pt-id-extractor/src/validators.ts"],"names":[],"mappings":";;;AAAA,iCAAgC;AAChC,4DAAyD;AAGzD,MAAa,UAAU;IAEnB,WAAW,CAAC,IAAY;QACpB,IAAI,IAAI,CAAC,KAAK,CAAC,yBAAW,CAAC,SAAS,CAAC,EAAE;YACnC,OAAO,WAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC7B;QACF,OAAO,KAAK,CAAC;IAChB,CAAC;IAEF,UAAU,CAAC,aAAqB;QAC5B,IAAI,aAAa,CAAC,KAAK,CAAC,yBAAW,CAAC,QAAQ,CAAC,EAAE;YAC1C,OAAQ,UAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;SACvC;QACA,OAAO,KAAK,CAAC;IAClB,CAAC;IAED,UAAU,CAAC,GAAW;QAClB,OAAO,UAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED,YAAY,CAAC,KAAa;QACzB,IAAI,KAAK,CAAC,MAAM,IAAI,EAAE,EAAE;YACpB,OAAO,KAAK,CAAC;SAChB;aAAM;YACH,MAAM,OAAO,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACrD,MAAM,SAAS,GAAG,EAAE,CAAC;YACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAClC;YACD,IAAI,GAAG,GAAC,CAAC,CAAC;YACV,8DAA8D;YAC9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;aAC9C;YAED,wBAAwB;YACxB,IAAI,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE;gBAC/D,OAAO,IAAI,CAAC;aACf;iBAAM;gBACH,OAAO,KAAK,CAAC;aAChB;SACJ;IACF,CAAC;CACH;AA3CD,gCA2CC","sourcesContent":["import {bi,cc,nif} from \"pt-id\";\nimport { environment } from \"./environments/environment\";\n\n\nexport class Validators {\n    \n    validateNIF(nifP: string): boolean {\n        if (nifP.match(environment.regex_nif)) {\n            return nif.validate(nifP);\n        }\n       return false;\n    }\n\n   validateCC(cartaoCidadoP: string): boolean {\n       if (cartaoCidadoP.match(environment.regex_cc)) {\n            return  cc.validate(cartaoCidadoP);\n       }\n        return false;\n   }\n\n   validateBI(biP: string): boolean {\n       return bi.validate(biP);\n   }\n\n   validateNISS(nissP: string): boolean {\n    if (nissP.length != 11) {\n        return false;\n    } else {\n        const FACTORS = [29, 23, 19, 17, 13, 11, 7, 5, 3, 2];\n        const nissArray = [];\n        for (let i = 0; i < nissP.length; i++) {\n            nissArray[i] = nissP.charAt(i);\n        }\n        let sum=0;\n        //faz a soma do digito [j] x o dígito [j] do array dos fatores\n        for (let j = 0; j < FACTORS.length; j++) {\n            sum += parseInt(nissArray[j]) * FACTORS[j];\n        }\n\n        //verifica se dá resto 0\n        if (parseInt(nissArray[nissArray.length - 1]) == (9 - (sum % 10))) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n   }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"753338787934a45a289b8e21e928eeee21b4ee69"}}