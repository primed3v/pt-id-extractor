{"/Users/pauloviana/Documents/GitHub/doc-extractor-pt/src/extractor.ts":{"path":"/Users/pauloviana/Documents/GitHub/doc-extractor-pt/src/extractor.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":59}},"3":{"start":{"line":7,"column":20},"end":{"line":7,"column":72}},"4":{"start":{"line":8,"column":24},"end":{"line":8,"column":43}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":23}},"6":{"start":{"line":12,"column":20},"end":{"line":12,"column":71}},"7":{"start":{"line":13,"column":23},"end":{"line":13,"column":42}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":22}},"9":{"start":{"line":17,"column":20},"end":{"line":17,"column":71}},"10":{"start":{"line":18,"column":23},"end":{"line":18,"column":42}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":22}},"12":{"start":{"line":22,"column":20},"end":{"line":22,"column":73}},"13":{"start":{"line":23,"column":25},"end":{"line":23,"column":44}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":24}},"15":{"start":{"line":27,"column":20},"end":{"line":27,"column":74}},"16":{"start":{"line":28,"column":25},"end":{"line":28,"column":44}},"17":{"start":{"line":29,"column":8},"end":{"line":29,"column":24}},"18":{"start":{"line":32,"column":0},"end":{"line":32,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":26},"end":{"line":10,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":25},"end":{"line":15,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":25},"end":{"line":20,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":27},"end":{"line":25,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":27},"end":{"line":30,"column":5}},"line":26}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/pauloviana/Documents/GitHub/doc-extractor-pt/src/extractor.ts","sources":["/Users/pauloviana/Documents/GitHub/doc-extractor-pt/src/extractor.ts"],"names":[],"mappings":";;;AAAA,4DAAyD;AAEzD,MAAa,SAAS;IAElB,WAAW,CAAC,QAAgB;QACxB,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,yBAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QACnD,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,UAAU,CAAC,QAAgB;QACvB,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,yBAAW,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAClD,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnC,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,UAAU,CAAC,QAAgB;QACvB,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,yBAAW,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAA;QACjD,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnC,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,YAAY,CAAC,QAAgB;QACzB,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,yBAAW,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;QACnD,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrC,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED,YAAY,CAAC,QAAgB;QACzB,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,yBAAW,CAAC,WAAW,EAAE,GAAG,CAAC,CAAA;QACpD,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrC,OAAO,QAAQ,CAAC;IACpB,CAAC;CACJ;AA/BD,8BA+BC","sourcesContent":["import { environment } from \"./environments/environment\";\n\nexport class Extractor {\n\n    extractNIFs(fullText: string): RegExpMatchArray | null {\n        const reg = new RegExp(environment.regex_nif, \"g\");\n        const arrNifs = fullText.match(reg);\n        return arrNifs;\n    }\n\n    extractCCs(fullText: string): RegExpMatchArray | null {\n        const reg = new RegExp(environment.regex_cc, \"g\");\n        const arrCCs = fullText.match(reg);\n        return arrCCs;\n    }\n\n    extractBIs(fullText: string):  RegExpMatchArray | null  {\n        const reg = new RegExp(environment.regex_bi, \"g\")\n        const arrBIs = fullText.match(reg);\n        return arrBIs;\n    }\n\n    extractNISSs(fullText: string):  RegExpMatchArray | null  {\n        const reg = new RegExp(environment.regex_niss, \"g\")\n        const arrNISSs = fullText.match(reg);\n        return arrNISSs;\n    }\n\n    extractDates(fullText: string):  RegExpMatchArray | null  {\n        const reg = new RegExp(environment.regex_dates, \"g\")\n        const arrDates = fullText.match(reg);\n        return arrDates;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ea99de93946b99792fe01150b8cdec3f45f7f69f"},"/Users/pauloviana/Documents/GitHub/doc-extractor-pt/src/validators.ts":{"path":"/Users/pauloviana/Documents/GitHub/doc-extractor-pt/src/validators.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":59}},"4":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"5":{"start":{"line":9,"column":12},"end":{"line":9,"column":46}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":21}},"7":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"8":{"start":{"line":15,"column":12},"end":{"line":15,"column":54}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":21}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":40}},"11":{"start":{"line":23,"column":8},"end":{"line":44,"column":9}},"12":{"start":{"line":24,"column":12},"end":{"line":24,"column":25}},"13":{"start":{"line":27,"column":28},"end":{"line":27,"column":64}},"14":{"start":{"line":28,"column":30},"end":{"line":28,"column":32}},"15":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"16":{"start":{"line":29,"column":25},"end":{"line":29,"column":26}},"17":{"start":{"line":30,"column":16},"end":{"line":30,"column":47}},"18":{"start":{"line":32,"column":22},"end":{"line":32,"column":23}},"19":{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},"20":{"start":{"line":34,"column":25},"end":{"line":34,"column":26}},"21":{"start":{"line":35,"column":16},"end":{"line":35,"column":59}},"22":{"start":{"line":38,"column":12},"end":{"line":43,"column":13}},"23":{"start":{"line":39,"column":16},"end":{"line":39,"column":28}},"24":{"start":{"line":42,"column":16},"end":{"line":42,"column":29}},"25":{"start":{"line":47,"column":0},"end":{"line":47,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":22},"end":{"line":12,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":30},"end":{"line":18,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":20},"end":{"line":21,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":24},"end":{"line":45,"column":5}},"line":22}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"type":"if","locations":[{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},{"start":{"line":8,"column":8},"end":{"line":10,"column":9}}],"line":8},"1":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14},"2":{"loc":{"start":{"line":23,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":44,"column":9}},{"start":{"line":23,"column":8},"end":{"line":44,"column":9}}],"line":23},"3":{"loc":{"start":{"line":38,"column":12},"end":{"line":43,"column":13}},"type":"if","locations":[{"start":{"line":38,"column":12},"end":{"line":43,"column":13}},{"start":{"line":38,"column":12},"end":{"line":43,"column":13}}],"line":38}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":2,"6":0,"7":2,"8":1,"9":1,"10":2,"11":2,"12":0,"13":2,"14":2,"15":2,"16":2,"17":22,"18":2,"19":2,"20":2,"21":20,"22":2,"23":1,"24":1,"25":1},"f":{"0":2,"1":2,"2":2,"3":2},"b":{"0":[2,0],"1":[1,1],"2":[0,2],"3":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/pauloviana/Documents/GitHub/doc-extractor-pt/src/validators.ts","sources":["/Users/pauloviana/Documents/GitHub/doc-extractor-pt/src/validators.ts"],"names":[],"mappings":";;;AAAA,iCAAgC;AAChC,4DAAyD;AAGzD,MAAa,UAAU;IAEnB,WAAW,CAAC,IAAY;QACpB,IAAI,IAAI,CAAC,KAAK,CAAC,yBAAW,CAAC,SAAS,CAAC,EAAE;YACnC,OAAO,WAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC7B;QACF,OAAO,KAAK,CAAC;IAChB,CAAC;IAEF,UAAU,CAAC,aAAqB;QAC5B,IAAI,aAAa,CAAC,KAAK,CAAC,yBAAW,CAAC,QAAQ,CAAC,EAAE;YAC1C,OAAQ,UAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;SACvC;QACA,OAAO,KAAK,CAAC;IAClB,CAAC;IAED,UAAU,CAAC,GAAW;QAClB,OAAO,UAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED,YAAY,CAAC,KAAa;QACzB,IAAI,KAAK,CAAC,MAAM,IAAI,EAAE,EAAE;YACpB,OAAO,KAAK,CAAC;SAChB;aAAM;YACH,MAAM,OAAO,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACrD,MAAM,SAAS,GAAG,EAAE,CAAC;YACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAClC;YACD,IAAI,GAAG,GAAC,CAAC,CAAC;YACV,8DAA8D;YAC9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;aAC9C;YAED,wBAAwB;YACxB,IAAI,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE;gBAC/D,OAAO,IAAI,CAAC;aACf;iBAAM;gBACH,OAAO,KAAK,CAAC;aAChB;SACJ;IACF,CAAC;CACH;AA3CD,gCA2CC","sourcesContent":["import {bi,cc,nif} from \"pt-id\";\nimport { environment } from \"./environments/environment\";\n\n\nexport class Validators {\n    \n    validateNIF(nifP: string): boolean {\n        if (nifP.match(environment.regex_nif)) {\n            return nif.validate(nifP);\n        }\n       return false;\n    }\n\n   validateCC(cartaoCidadoP: string): boolean {\n       if (cartaoCidadoP.match(environment.regex_cc)) {\n            return  cc.validate(cartaoCidadoP);\n       }\n        return false;\n   }\n\n   validateBI(biP: string): boolean {\n       return bi.validate(biP);\n   }\n\n   validateNISS(nissP: string): boolean {\n    if (nissP.length != 11) {\n        return false;\n    } else {\n        const FACTORS = [29, 23, 19, 17, 13, 11, 7, 5, 3, 2];\n        const nissArray = [];\n        for (let i = 0; i < nissP.length; i++) {\n            nissArray[i] = nissP.charAt(i);\n        }\n        let sum=0;\n        //faz a soma do digito [j] x o dígito [j] do array dos fatores\n        for (let j = 0; j < FACTORS.length; j++) {\n            sum += parseInt(nissArray[j]) * FACTORS[j];\n        }\n\n        //verifica se dá resto 0\n        if (parseInt(nissArray[nissArray.length - 1]) == (9 - (sum % 10))) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n   }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d458cd5dd40e148bf8030b579d7c665a12c9ed32"}}